{"ast":null,"code":"var _jsxFileName = \"/Users/xiaotengzhang/Desktop/Se/codingExercise/my-app/src/App.js\",\n  _s = $RefreshSig$();\n/* \nFor this coding exercise, there are three parts that I didn’t do well:\n\n1. The API-Link (ref: Line45 - src/App.js)\nI am confident that the way I used to fetch data from API link works perfect, as I tried the other link that I used in the past \n`https://pokeapi.co/api/v2/pokemon-form/${i + 1}`, things went pretty much well and the autocomplete field pops up. However, when \nI changed it to the API_URL = \"http://localhost:8010/proxy/suburbs.json?q=“, nothing happens.\n\n2. I didn’t writhe the code separately in the ./Input, ./Button and ./ResultList file, instead, I put them all in app.css. If \nI have more time, I would definitely could split my code and put them into these files so that the APP.css will not contain too many things.\n\n3. As I couldn’t use the API_URL link and don’t know the content inside it, I did not modify the CSS of displayed autofill content and \ndidn’t set an onClick function to “search” button.\nIf I have time, I will write an onClick to allow search button fetch related results from API data.\n\nThank you for reading these comments.\n*/\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport iconPath from \"./components/Button/icons.svg\";\nimport \"./components/Button/Button.css\";\nimport \"./App.css\";\nimport \"./components/Input/Input.css\";\nimport \"./components/ResultsList/ResultsList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8010/proxy/suburbs.json?q=\";\nconst API_SAMPLE = [{\n  name: \"Sydney South\",\n  state: {\n    abbreviation: \"NSW\"\n  }\n}, {\n  name: \"Sydney\",\n  state: {\n    abbreviation: \"NSW\"\n  }\n}, {\n  name: \"Sydney International Airport\",\n  state: {\n    abbreviation: \"NSW\"\n  }\n}, {\n  name: \"Sydney Domestic Airport\",\n  state: {\n    abbreviation: \"NSW\"\n  }\n}, {\n  name: \"Sydenham\",\n  state: {\n    abbreviation: \"VIC\"\n  }\n}];\n\n/**\n * <Input\n *   className=\"MyInput\"\n *   data-something=\"Value\"\n *   value=\"Hello, World!\"\n *   onChange={(value) => console.log('You typed', value)}\n * />\n *\n * @prop {string} value The default value for the input.\n * @prop {string} placeholder The placeholder text.\n * @prop {Function} onChange Callback that will receive current input value.\n * @prop {mixed} ... All other props will be forwarded to the native DOM input.\n */\n\nconst Auto = props => {\n  _s();\n  const {\n    onClick,\n    className,\n    items,\n    onSelect,\n    value,\n    onChange,\n    ...otherProps\n  } = props;\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const wrapperRef = useRef(null);\n  useEffect(() => {\n    const suburb = [];\n    const promises = new Array(20).fill().map((v, i) => fetch(API_URL)); // If I change this URL to other API, e.g.: https://pokeapi.co/api/v2/pokemon-form/${i + 1}, it works fine. While it doesn't work with the provided API\n    Promise.all(promises).then(suburbArr => {\n      return suburbArr.map(value => value.json().then(_ref => {\n        let {\n          name,\n          sprites: {\n            front_default: sprite\n          }\n        } = _ref;\n        return suburb.push({\n          name,\n          sprite\n        });\n      }));\n    });\n    setOptions(suburb);\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n  const handleClickOutside = event => {\n    const {\n      current: wrap\n    } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n  const updatesbbDex = sbb => {\n    setSearch(sbb);\n    setDisplay(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    className: \"flex-container flex-column pos-rel\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"same\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"p-style\",\n          children: \"Suburb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"auto\",\n          onClick: () => setDisplay(!display),\n          placeholder: \"ABC Suburb Search\",\n          value: search,\n          onChange: event => setSearch(event.target.value),\n          className: \"Input \" + (className || \"\"),\n          type: \"text\",\n          ...otherProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"Button \" + (className || \"\"),\n          onClick: onClick,\n          ...otherProps,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            width: \"24\",\n            height: \"16\",\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: iconPath + \"#dls-icon-arrow-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), display && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autoContainer\",\n      children: options.filter(_ref2 => {\n        let {\n          name\n        } = _ref2;\n        return name.indexOf(search.toLowerCase()) > -1;\n      }).map((value, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => updatesbbDex(value.name),\n          className: \"option\",\n          tabIndex: \"0\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: value.sprite,\n            alt: \"suburb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Auto, \"PYvxLD5+q1mOdd1DxsP3Tui7ZEA=\");\n_c = Auto;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-container\",\n      children: /*#__PURE__*/_jsxDEV(Auto, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Auto\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","iconPath","API_URL","API_SAMPLE","name","state","abbreviation","Auto","props","onClick","className","items","onSelect","value","onChange","otherProps","display","setDisplay","options","setOptions","search","setSearch","wrapperRef","suburb","promises","Array","fill","map","v","i","fetch","Promise","all","then","suburbArr","json","sprites","front_default","sprite","push","window","addEventListener","handleClickOutside","removeEventListener","event","current","wrap","contains","target","updatesbbDex","sbb","filter","indexOf","toLowerCase","App"],"sources":["/Users/xiaotengzhang/Desktop/Se/codingExercise/my-app/src/App.js"],"sourcesContent":["/* \nFor this coding exercise, there are three parts that I didn’t do well:\n\n1. The API-Link (ref: Line45 - src/App.js)\nI am confident that the way I used to fetch data from API link works perfect, as I tried the other link that I used in the past \n`https://pokeapi.co/api/v2/pokemon-form/${i + 1}`, things went pretty much well and the autocomplete field pops up. However, when \nI changed it to the API_URL = \"http://localhost:8010/proxy/suburbs.json?q=“, nothing happens.\n\n2. I didn’t writhe the code separately in the ./Input, ./Button and ./ResultList file, instead, I put them all in app.css. If \nI have more time, I would definitely could split my code and put them into these files so that the APP.css will not contain too many things.\n\n3. As I couldn’t use the API_URL link and don’t know the content inside it, I did not modify the CSS of displayed autofill content and \ndidn’t set an onClick function to “search” button.\nIf I have time, I will write an onClick to allow search button fetch related results from API data.\n\nThank you for reading these comments.\n*/\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport iconPath from \"./components/Button/icons.svg\";\nimport \"./components/Button/Button.css\"\nimport \"./App.css\";\nimport \"./components/Input/Input.css\"\nimport \"./components/ResultsList/ResultsList.css\"\n\nconst API_URL = \"http://localhost:8010/proxy/suburbs.json?q=\";\n\nconst API_SAMPLE = [\n  { name: \"Sydney South\", state: { abbreviation: \"NSW\" } },\n  { name: \"Sydney\", state: { abbreviation: \"NSW\" } },\n  { name: \"Sydney International Airport\", state: { abbreviation: \"NSW\" } },\n  { name: \"Sydney Domestic Airport\", state: { abbreviation: \"NSW\" } },\n  { name: \"Sydenham\", state: { abbreviation: \"VIC\" } }\n];\n\n/**\n * <Input\n *   className=\"MyInput\"\n *   data-something=\"Value\"\n *   value=\"Hello, World!\"\n *   onChange={(value) => console.log('You typed', value)}\n * />\n *\n * @prop {string} value The default value for the input.\n * @prop {string} placeholder The placeholder text.\n * @prop {Function} onChange Callback that will receive current input value.\n * @prop {mixed} ... All other props will be forwarded to the native DOM input.\n */\n\nconst Auto = (props) => {\n  const { onClick, className, items, onSelect, value, onChange, ...otherProps } = props;\n\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const wrapperRef = useRef(null);\n\n  useEffect(() => {\n    const suburb = [];\n    const promises = new Array(20)\n      .fill()\n      .map((v, i) => fetch(API_URL)); // If I change this URL to other API, e.g.: https://pokeapi.co/api/v2/pokemon-form/${i + 1}, it works fine. While it doesn't work with the provided API\n    Promise.all(promises).then(suburbArr => {\n      return suburbArr.map(value =>\n        value\n          .json()\n          .then(({ name, sprites: { front_default: sprite } }) =>\n            suburb.push({ name, sprite })\n          )\n      );\n    });\n    setOptions(suburb);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  const updatesbbDex = sbb => {\n    setSearch(sbb);\n    setDisplay(false);\n  };\n\n  return (\n    <div ref={wrapperRef} className=\"flex-container flex-column pos-rel\">\n    <section>\n      <div className=\"same\">\n        <p className=\"p-style\">Suburb</p>\n        <input\n          id=\"auto\"\n          onClick={() => setDisplay(!display)}\n          placeholder=\"ABC Suburb Search\"\n          value={search}\n          onChange={event => setSearch(event.target.value)}\n          className={\"Input \" + (className || \"\")}\n          type=\"text\"\n          {...otherProps}\n        />\n        <button\n          type=\"button\"\n          className={\"Button \" + (className || \"\")}\n          onClick={onClick}\n          {...otherProps}\n        >\n        <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"16\">\n          <use xlinkHref={iconPath + \"#dls-icon-arrow-right\"} />\n        </svg>\n        </button>\n      </div>\n    </section>\n      {display && (\n          <div className=\"autoContainer\">\n            {options\n              .filter(({ name }) => name.indexOf(search.toLowerCase()) > -1)\n              .map((value, i) => {\n                return (\n                  <div\n                    onClick={() => updatesbbDex(value.name)}\n                    className=\"option\"\n                    key={i}\n                    tabIndex=\"0\"\n                  >\n                    <span>{value.name}</span>\n                    <img src={value.sprite} alt=\"suburb\" />\n                  </div>\n                );\n              })}\n          </div>\n        )}\n    </div>\n  );\n};\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n    <div className=\"logo\"></div>\n    <div className=\"auto-container\">\n      <Auto />\n    </div>\n  </div>\n\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}