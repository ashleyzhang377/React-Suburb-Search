{"ast":null,"code":"var _jsxFileName = \"/Users/xiaotengzhang/Desktop/Se/codingExercise/my-app/src/components/Input/Input.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Box } from \"@mui/system\";\nimport \"./Input.css\";\nimport { ResultsList } from \"../ResultsList/ResultsList\";\n\n/**\n * <Input\n *   className=\"MyInput\"\n *   data-something=\"Value\"\n *   value=\"Hello, World!\"\n *   onChange={(value) => console.log('You typed', value)}\n * />\n *\n * @prop {string} value The default value for the input.\n * @prop {string} placeholder The placeholder text.\n * @prop {Function} onChange Callback that will receive current input value.\n * @prop {mixed} ... All other props will be forwarded to the native DOM input.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Input(props) {\n  const {\n    className,\n    onChange,\n    ...otherProps\n  } = props;\n  // const [inputValue, setInputValue] = useState(value);\n\n  // Keep the current value, unless the parent component supplies a different \"value\" prop.\n  // useEffect(() => {\n  //   setInputValue(value);\n  // }, [value]);\n\n  function handleChange(event) {\n    setInputValue(event.target.value);\n    onChange && onChange(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Suburb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Input \" + (className || \"\"),\n      type: \"text\",\n      value: value,\n      placeholder: \"ABC Suburb Search\",\n      onChange: handleChange,\n      ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TextField","Autocomplete","Box","ResultsList","Input","props","className","onChange","otherProps","handleChange","event","setInputValue","target","value"],"sources":["/Users/xiaotengzhang/Desktop/Se/codingExercise/my-app/src/components/Input/Input.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Box } from \"@mui/system\";\nimport \"./Input.css\";\nimport { ResultsList } from \"../ResultsList/ResultsList\"\n\n\n/**\n * <Input\n *   className=\"MyInput\"\n *   data-something=\"Value\"\n *   value=\"Hello, World!\"\n *   onChange={(value) => console.log('You typed', value)}\n * />\n *\n * @prop {string} value The default value for the input.\n * @prop {string} placeholder The placeholder text.\n * @prop {Function} onChange Callback that will receive current input value.\n * @prop {mixed} ... All other props will be forwarded to the native DOM input.\n */\nexport function Input(props) {\n  const { className, onChange, ...otherProps } = props;\n  // const [inputValue, setInputValue] = useState(value);\n\n  // Keep the current value, unless the parent component supplies a different \"value\" prop.\n  // useEffect(() => {\n  //   setInputValue(value);\n  // }, [value]);\n\n  function handleChange(event) {\n    setInputValue(event.target.value);\n    onChange && onChange(event.target.value);\n  }\n\n\n  return (\n    <div>\n    <h2>Suburb</h2>\n    <input\n      className={\"Input \" + (className || \"\")}\n      type=\"text\"\n      value={value}\n      placeholder=\"ABC Suburb Search\"\n      onChange={handleChange}\n      {...otherProps}\n    />\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,4BAA4B;;AAGxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAaA,OAAO,SAASC,KAAK,CAACC,KAAK,EAAE;EAC3B,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAE,GAAGC;EAAW,CAAC,GAAGH,KAAK;EACpD;;EAEA;EACA;EACA;EACA;;EAEA,SAASI,YAAY,CAACC,KAAK,EAAE;IAC3BC,aAAa,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IACjCN,QAAQ,IAAIA,QAAQ,CAACG,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EAC1C;EAGA,oBACE;IAAA,wBACA;MAAA,UAAI;IAAM;MAAA;MAAA;MAAA;IAAA,QAAK,eACf;MACE,SAAS,EAAE,QAAQ,IAAIP,SAAS,IAAI,EAAE,CAAE;MACxC,IAAI,EAAC,MAAM;MACX,KAAK,EAAEO,KAAM;MACb,WAAW,EAAC,mBAAmB;MAC/B,QAAQ,EAAEJ,YAAa;MAAA,GACnBD;IAAU;MAAA;MAAA;MAAA;IAAA,QACd;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEV;AAAC,KA5BeJ,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}