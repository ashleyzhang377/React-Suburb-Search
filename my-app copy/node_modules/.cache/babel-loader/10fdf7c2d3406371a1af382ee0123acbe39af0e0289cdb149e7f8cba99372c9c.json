{"ast":null,"code":"var _jsxFileName = \"/Users/xiaotengzhang/Desktop/Se/codingExercise/my-app/src/components/Input/Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport { AutoComplete } from 'material-ui/AutoComplete';\nimport { Box } from \"@mui/system\";\nimport \"./Input.css\";\nimport { ResultsList } from \"../ResultsList/ResultsList\";\n\n/**\n * <Input\n *   className=\"MyInput\"\n *   data-something=\"Value\"\n *   value=\"Hello, World!\"\n *   onChange={(value) => console.log('You typed', value)}\n * />\n *\n * @prop {string} value The default value for the input.\n * @prop {string} placeholder The placeholder text.\n * @prop {Function} onChange Callback that will receive current input value.\n * @prop {mixed} ... All other props will be forwarded to the native DOM input.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Input(props) {\n  _s();\n  const {\n    className,\n    value,\n    onChange,\n    ...otherProps\n  } = props;\n  const API_SAMPLE = [{\n    name: \"Sydney South\",\n    state: {\n      abbreviation: \"NSW\"\n    }\n  }, {\n    name: \"Sydney\",\n    state: {\n      abbreviation: \"NSW\"\n    }\n  }, {\n    name: \"Sydney International Airport\",\n    state: {\n      abbreviation: \"NSW\"\n    }\n  }, {\n    name: \"Sydney Domestic Airport\",\n    state: {\n      abbreviation: \"NSW\"\n    }\n  }, {\n    name: \"Sydenham\",\n    state: {\n      abbreviation: \"VIC\"\n    }\n  }];\n\n  // const [inputValue, setInputValue] = useState(value);\n\n  const [inputValue, setInputValue] = useState([]);\n  useEffect(() => {\n    fetch(\"https://www.balldontlie.io/api/v1/players\").then(response => response.json()).then(json => setInputValue(json.data));\n  }, []);\n  console.log(inputValue);\n\n  // Keep the current value, unless the parent component supplies a different \"value\" prop.\n  // useEffect(() => {\n  //   setInputValue(value);\n  // }, [value]);\n\n  // function handleChange(event) {\n  //   setInputValue(event.target.value);\n  //   onChange && onChange(event.target.value);\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <input\n    //   className={\"Input \" + (className || \"\")}\n    //   type=\"text\"\n    //   value={inputValue}\n    //   onChange={handleChange}\n    //   {...otherProps}\n    // />\n    _jsxDEV(AutoComplete, {\n      id: \"abc\",\n      getOptionLable: inputValue => `${inputValue.first_name} ${inputValue.last_name}`,\n      options: inputValue,\n      isOptionEqualToValue: (option, value) => option.first_name === value.first_name,\n      noOptionsText: \"No Available Data\",\n      renderOption: (props, inputValue) => /*#__PURE__*/_jsxDEV(ResultsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        label: \"Search for a suburb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Input, \"x0mf7N0Ntg6uD2wqaJys2hHyBn4=\");\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Stack","AutoComplete","Box","ResultsList","Input","props","className","value","onChange","otherProps","API_SAMPLE","name","state","abbreviation","inputValue","setInputValue","fetch","then","response","json","data","console","log","first_name","last_name","option","params"],"sources":["/Users/xiaotengzhang/Desktop/Se/codingExercise/my-app/src/components/Input/Input.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Stack from \"@mui/material/Stack\";\nimport { AutoComplete } from 'material-ui/AutoComplete';\nimport { Box } from \"@mui/system\";\nimport \"./Input.css\";\nimport { ResultsList } from \"../ResultsList/ResultsList\"\n\n/**\n * <Input\n *   className=\"MyInput\"\n *   data-something=\"Value\"\n *   value=\"Hello, World!\"\n *   onChange={(value) => console.log('You typed', value)}\n * />\n *\n * @prop {string} value The default value for the input.\n * @prop {string} placeholder The placeholder text.\n * @prop {Function} onChange Callback that will receive current input value.\n * @prop {mixed} ... All other props will be forwarded to the native DOM input.\n */\nexport function Input(props) {\n  const { className, value, onChange, ...otherProps } = props;\n\n  const API_SAMPLE = [\n    { name: \"Sydney South\", state: { abbreviation: \"NSW\" } },\n    { name: \"Sydney\", state: { abbreviation: \"NSW\" } },\n    { name: \"Sydney International Airport\", state: { abbreviation: \"NSW\" } },\n    { name: \"Sydney Domestic Airport\", state: { abbreviation: \"NSW\" } },\n    { name: \"Sydenham\", state: { abbreviation: \"VIC\" } }\n  ];\n\n  // const [inputValue, setInputValue] = useState(value);\n\n  const [inputValue, setInputValue] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://www.balldontlie.io/api/v1/players\")\n    .then((response) => response.json())\n    .then((json) => setInputValue(json.data))\n  }, []);\n  console.log(inputValue)\n\n  // Keep the current value, unless the parent component supplies a different \"value\" prop.\n  // useEffect(() => {\n  //   setInputValue(value);\n  // }, [value]);\n\n  // function handleChange(event) {\n  //   setInputValue(event.target.value);\n  //   onChange && onChange(event.target.value);\n  // }\n\n  return (\n    // <input\n    //   className={\"Input \" + (className || \"\")}\n    //   type=\"text\"\n    //   value={inputValue}\n    //   onChange={handleChange}\n    //   {...otherProps}\n    // />\n    <AutoComplete \n      id=\"abc\"\n      getOptionLable={(inputValue) => `${inputValue.first_name} ${inputValue.last_name}`}\n      options={inputValue}\n      isOptionEqualToValue={(option, value) =>\n          option.first_name === value.first_name\n      }\n      noOptionsText={\"No Available Data\"}\n      renderOption={(props, inputValue) => (\n        <ResultsList />\n      )}\n      renderInput={(params) => <TextField {...params} label=\"Search for a suburb\" />}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,4BAA4B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAaA,OAAO,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EAC3B,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,QAAQ;IAAE,GAAGC;EAAW,CAAC,GAAGJ,KAAK;EAE3D,MAAMK,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,cAAc;IAAEC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM;EAAE,CAAC,EACxD;IAAEF,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM;EAAE,CAAC,EAClD;IAAEF,IAAI,EAAE,8BAA8B;IAAEC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM;EAAE,CAAC,EACxE;IAAEF,IAAI,EAAE,yBAAyB;IAAEC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM;EAAE,CAAC,EACnE;IAAEF,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM;EAAE,CAAC,CACrD;;EAED;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdkB,KAAK,CAAC,2CAA2C,CAAC,CACjDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKJ,aAAa,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC;;EAEvB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,YAAY;MACX,EAAE,EAAC,KAAK;MACR,cAAc,EAAGA,UAAU,IAAM,GAAEA,UAAU,CAACS,UAAW,IAAGT,UAAU,CAACU,SAAU,EAAE;MACnF,OAAO,EAAEV,UAAW;MACpB,oBAAoB,EAAE,CAACW,MAAM,EAAElB,KAAK,KAChCkB,MAAM,CAACF,UAAU,KAAKhB,KAAK,CAACgB,UAC/B;MACD,aAAa,EAAE,mBAAoB;MACnC,YAAY,EAAE,CAAClB,KAAK,EAAES,UAAU,kBAC9B,QAAC,WAAW;QAAA;QAAA;QAAA;MAAA,QACZ;MACF,WAAW,EAAGY,MAAM,iBAAK,QAAC,SAAS;QAAA,GAAKA,MAAM;QAAE,KAAK,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA;EAC/E;AAEN;AAAC,GAtDetB,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}